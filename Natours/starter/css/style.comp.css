/* this is done to normalize the elements*/
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /*box-sizing property is not inherited by itself, but by making it inherit explicitly on the top it is inherited by all elements*/ }

html {
  /*font-size: 10px;*/
  font-size: 62.5%; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /*font-size: 16px;*/
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box;
  /*change the box modal, so that border and padding
    are not longer added to the total width or height*/ }

.header {
  height: 95vh;
  /* height would be 95 percent of the view port height(view port  its vertical height)*/
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  /*?*/
  background-position: top;
  /* it means when we resize the browser the top of the image remains same,
    bottom can change*/
  clip-path: polygon(0 0, 100% 0, 100% 90%, 0 100%);
  position: relative;
  /* for logo-box absolute*/ }

.header__logo-box {
  position: absolute;
  /*this is absolute to parent element, which is relative (header in this case)*/
  top: 4rem;
  left: 4rem; }

.header__logo {
  height: 3.5rem; }

.logo:hover {
  animation: moveInRight 1s ease-out; }

.header__text-box {
  position: absolute;
  top: 40%;
  /* in relation to the parent, does parent has to be relative ?*/
  left: 50%;
  transform: translate(-50%, -50%);
  /*in relation to the element itself , so if we use this it bring element exactly to the center*/
  text-align: center; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem; }

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation-name: moveInLeft;
  animation-duration: 2s;
  animation-timing-function: ease-out;
  /*animation-iteration-count: 3; number of times this will happen
  animation-delay: 3s; animation will happen after 3s*/ }

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  animation: moveInRight 2s ease-out; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    translate: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    translate: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    translate: translate(0); } }

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all .2s;
  position: relative;
  font-size: 1.6rem; }

.btn:hover {
  transform: translateY(-1rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }

.btn:active {
  transform: translateY(-5px);
  box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }

.btn::after {
  content: "";
  diplay: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  /* always needs a relative parent reference , which in this case is*/
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s; }

.btn--white::after {
  background-color: #fff; }

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0; }

.btn--animated {
  animation: moveInBottom .5s ease-out .75s;
  animation-fill-mode: backwards; }
